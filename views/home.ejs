<p class="welcome mt-3">Welcome
  <b>
    <%= username %>
  </b>
</p>

<div class="row">
  <div class="col">
    <div class="mt-2 mt-sm-0 card text-center">
      <div class="card-body">
        <h2 class="card-title text-blue" id="scrobbleLabel">?</h2>
        <i class="bi-music-note-beamed" style="font-size: 3rem; color: cornflowerblue;"></i>
        <p class="card-text">Scrobbles</p>
      </div>
    </div>
  </div>
  <div class="col">
    <div class="mt-2 mt-sm-0 card text-center">
      <div class="card-body">
        <h2 class="card-title" id="albumLabel">?</h2>
        <i class="bi-disc" style="font-size: 3rem; color: cornflowerblue;"></i>
        <p class="card-text">Albums</p>
      </div>
    </div>
  </div>
  <div class="col">
    <div class="mt-2 mt-sm-0 card text-center">
      <div class="card-body">
        <h2 class="card-title" id="artistLabel">?</h2>
        <i class="bi-people-fill" style="font-size: 3rem; color: cornflowerblue;"></i>
        <p class="card-text">Artists</p>
      </div>
    </div>
  </div>
</div>

<h4 class="mt-4">Recent Scrobbles</h3>

  <div class="row mt-3">
    <div class="col">
      <table class="table table-striped">
        <tbody id="scrobbleTable">
        </tbody>
      </table>
    </div>
  </div>

  <style>
    .welcome {
      font-size: 1.5rem;
    }
  </style>

  <script src="./scripts/time.js"></script>
  <script>
    onLoad()

    function onLoad() {
      fillStats();
      getLastTracks();
    }

    function getLocalScrobbleDateString(track) {
      const scrobbleDateUnix = track.date?.uts
      if (!scrobbleDateUnix) {
        if (track["@attr"]?.nowplaying) {
          return "now playing...";
        } else {
          return "unknown";
        }
      }
      let scrobbleDate = new Date(scrobbleDateUnix * 1000);
      const scrobbleDateLocal = timeUtils.localTime(scrobbleDate)
      const scrobbleDateString = `${scrobbleDateLocal.toISOString().substring(0, 10)} ${scrobbleDateLocal.toISOString().substring(11, 16)}`
      return scrobbleDateString;
    }

    async function getLastTracks() {
      try {
        const response = await axios.get(`http://${window.location.host}/latestTracks`);
        const tracks = response.data.recenttracks.track;
        const table = document.getElementById("scrobbleTable");
        tracks.forEach(track => {
          const scrobbleDate = getLocalScrobbleDateString(track);

          var img = document.createElement('img');
          img.src = track.image[0]["#text"];
          let row = table.insertRow();

          var cell1 = row.insertCell(0);
          cell1.appendChild(img);
          cell1.style = "width: 65px;"

          var cell2 = row.insertCell(1);
          cell2.innerHTML = track.name;
          cell2.style = "width: 350px; max-width: 350px;"
          cell2.class = "text-muted";

          var cell3 = row.insertCell(2);
          cell3.innerHTML = `<small class="text-muted">${track.artist["#text"]}</small>`;
          cell3.style = "width: 350px; max-width: 350px;"

          var cell4 = row.insertCell(3);
          cell4.innerHTML = `<small class="text-muted">${scrobbleDate}</small>`;
          cell4.style = "width: 350px; max-width: 350px;"

          var cell5 = row.insertCell(4);
          cell5.innerHTML = `<a href="${track.url}" target="_blank"><i class="bi-arrow-up-right" style="font-size: 1.4rem; color: black;"></i></a>`
          cell5.style = "text-align: right;"
        });
      } catch (err) {
        console.log(err)
      }
    }

    function fillStats() {
      let user = JSON.parse(cookies.getCookie('user'));
      if (user) {
        document.getElementById("scrobbleLabel").innerHTML = user.playcount;
        document.getElementById("albumLabel").innerHTML = user.album_count;
        document.getElementById("artistLabel").innerHTML = user.artist_count;
      }
    }
  </script>